{
  "stats": {
    "suites": 4,
    "tests": 13,
    "passes": 6,
    "pending": 7,
    "failures": 0,
    "start": "2017-01-16T21:07:29.798Z",
    "end": "2017-01-16T21:07:29.816Z",
    "duration": 18,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 53.8,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "warning"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Helpers",
        "suites": [
          {
            "title": "soll die Datenbank query basierend auf Parametern laden",
            "suites": [],
            "tests": [
              {
                "title": "soll das Query für alle Entities zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für alle Entities zurückgegeben",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('all');",
                "err": {},
                "isRoot": false,
                "uuid": "c587e816-65fa-435e-a198-085e184d2d34",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein einzelnes Entity zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein einzelnes Entity zurückgegeben",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {id: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.true;\nexpect(data.query).to.equal('id');",
                "err": {},
                "isRoot": false,
                "uuid": "cf95b877-00b9-4f05-b3e0-766e11ba77ff",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein Entity gefiltert nach Team zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Team zurückgegeben",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {team: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('team');",
                "err": {},
                "isRoot": false,
                "uuid": "0c9c9be1-6345-4c8a-b93e-f6730a8a0726",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {gruppe: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('gruppe');",
                "err": {},
                "isRoot": false,
                "uuid": "64fbf287-ba38-444b-b976-9065d7c36931",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {jugend: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('jugend');",
                "err": {},
                "isRoot": false,
                "uuid": "8b1431f5-5b86-4910-9564-e15a3a346423",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 5000,
            "file": "/test/backend/helpers.spec.js",
            "uuid": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
            "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/helpers.spec.js",
            "passes": [
              {
                "title": "soll das Query für alle Entities zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für alle Entities zurückgegeben",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('all');",
                "err": {},
                "isRoot": false,
                "uuid": "c587e816-65fa-435e-a198-085e184d2d34",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein einzelnes Entity zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein einzelnes Entity zurückgegeben",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {id: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.true;\nexpect(data.query).to.equal('id');",
                "err": {},
                "isRoot": false,
                "uuid": "cf95b877-00b9-4f05-b3e0-766e11ba77ff",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein Entity gefiltert nach Team zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Team zurückgegeben",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {team: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('team');",
                "err": {},
                "isRoot": false,
                "uuid": "0c9c9be1-6345-4c8a-b93e-f6730a8a0726",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {gruppe: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('gruppe');",
                "err": {},
                "isRoot": false,
                "uuid": "64fbf287-ba38-444b-b976-9065d7c36931",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              },
              {
                "title": "soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
                "fullTitle": "Helpers soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var req = {query: {jugend: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('jugend');",
                "err": {},
                "isRoot": false,
                "uuid": "8b1431f5-5b86-4910-9564-e15a3a346423",
                "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "soll das Team-Ergebnis zurücksetzen können",
            "suites": [],
            "tests": [
              {
                "title": "soll das Ergebnis für Team A zurücksetzen",
                "fullTitle": "Helpers soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team A zurücksetzen",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "helpers.resetErgebnis({}, spiel, oldData, 'teamA', mock.callback);\nexpect(mock.called).to.be.true;",
                "err": {},
                "isRoot": false,
                "uuid": "d459e4a0-f8c0-4bb9-91c1-502e60519ed6",
                "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
                "skipped": false
              },
              {
                "title": "soll das Ergebnis für Team B zurücksetzen",
                "fullTitle": "Helpers soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team B zurücksetzen",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "1f4ec071-0ab7-4eec-ae8d-a5f924ca1398",
                "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "soll das Ergebnis für Team B zurücksetzen",
                "fullTitle": "Helpers soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team B zurücksetzen",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "1f4ec071-0ab7-4eec-ae8d-a5f924ca1398",
                "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 5000,
            "file": "/test/backend/helpers.spec.js",
            "uuid": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
            "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/helpers.spec.js",
            "passes": [
              {
                "title": "soll das Ergebnis für Team A zurücksetzen",
                "fullTitle": "Helpers soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team A zurücksetzen",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "helpers.resetErgebnis({}, spiel, oldData, 'teamA', mock.callback);\nexpect(mock.called).to.be.true;",
                "err": {},
                "isRoot": false,
                "uuid": "d459e4a0-f8c0-4bb9-91c1-502e60519ed6",
                "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "soll den letzten Slash bei einem Pfad entfernen können",
            "suites": [],
            "tests": [
              {
                "title": "wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
                "fullTitle": "Helpers soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "a47550d8-c0e7-45c9-b942-5dd7dcace086",
                "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
                "skipped": false
              },
              {
                "title": "wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
                "fullTitle": "Helpers soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "407cd8a4-63d4-4dce-bef2-3fcb4fe3a962",
                "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
                "fullTitle": "Helpers soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "a47550d8-c0e7-45c9-b942-5dd7dcace086",
                "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
                "skipped": false
              },
              {
                "title": "wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
                "fullTitle": "Helpers soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "err": {},
                "isRoot": false,
                "uuid": "407cd8a4-63d4-4dce-bef2-3fcb4fe3a962",
                "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 5000,
            "file": "/test/backend/helpers.spec.js",
            "uuid": "332a8a19-0b78-4209-9744-68fc61ba3209",
            "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/helpers.spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 2,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [
          {
            "title": "soll einem Entity ein Team hinzufügen",
            "fullTitle": "Helpers soll einem Entity ein Team hinzufügen",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "8ece10e3-8213-4d8d-8472-2d2eb80f470e",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          },
          {
            "title": "soll ein Entity anhand eines Parameters enfernen",
            "fullTitle": "Helpers soll ein Entity anhand eines Parameters enfernen",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "6cb99475-6331-4f6f-b880-47c9c61aa918",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          },
          {
            "title": "soll einen Token validieren",
            "fullTitle": "Helpers soll einen Token validieren",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "bfea90cf-af7d-4325-a037-d3709e3b0e62",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          },
          {
            "title": "soll einen User speichern und eine Email schicken",
            "fullTitle": "Helpers soll einen User speichern und eine Email schicken",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "68e6f4b8-1987-4bd8-83e1-dba93de9f1ae",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "soll einem Entity ein Team hinzufügen",
            "fullTitle": "Helpers soll einem Entity ein Team hinzufügen",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "8ece10e3-8213-4d8d-8472-2d2eb80f470e",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          },
          {
            "title": "soll ein Entity anhand eines Parameters enfernen",
            "fullTitle": "Helpers soll ein Entity anhand eines Parameters enfernen",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "6cb99475-6331-4f6f-b880-47c9c61aa918",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          },
          {
            "title": "soll einen Token validieren",
            "fullTitle": "Helpers soll einen Token validieren",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "bfea90cf-af7d-4325-a037-d3709e3b0e62",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          },
          {
            "title": "soll einen User speichern und eine Email schicken",
            "fullTitle": "Helpers soll einen User speichern und eine Email schicken",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "68e6f4b8-1987-4bd8-83e1-dba93de9f1ae",
            "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 5000,
        "file": "/test/backend/helpers.spec.js",
        "uuid": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
        "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/helpers.spec.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 4,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 4,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 5000,
    "uuid": "5719dfbd-d504-4d13-9cea-3271bdbe4a9b",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "soll einem Entity ein Team hinzufügen",
      "fullTitle": "Helpers soll einem Entity ein Team hinzufügen",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "8ece10e3-8213-4d8d-8472-2d2eb80f470e",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll ein Entity anhand eines Parameters enfernen",
      "fullTitle": "Helpers soll ein Entity anhand eines Parameters enfernen",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "6cb99475-6331-4f6f-b880-47c9c61aa918",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll einen Token validieren",
      "fullTitle": "Helpers soll einen Token validieren",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "bfea90cf-af7d-4325-a037-d3709e3b0e62",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll einen User speichern und eine Email schicken",
      "fullTitle": "Helpers soll einen User speichern und eine Email schicken",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "68e6f4b8-1987-4bd8-83e1-dba93de9f1ae",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll das Query für alle Entities zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für alle Entities zurückgegeben",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('all');",
      "err": {},
      "isRoot": false,
      "uuid": "c587e816-65fa-435e-a198-085e184d2d34",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein einzelnes Entity zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein einzelnes Entity zurückgegeben",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {id: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.true;\nexpect(data.query).to.equal('id');",
      "err": {},
      "isRoot": false,
      "uuid": "cf95b877-00b9-4f05-b3e0-766e11ba77ff",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein Entity gefiltert nach Team zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Team zurückgegeben",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {team: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('team');",
      "err": {},
      "isRoot": false,
      "uuid": "0c9c9be1-6345-4c8a-b93e-f6730a8a0726",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {gruppe: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('gruppe');",
      "err": {},
      "isRoot": false,
      "uuid": "64fbf287-ba38-444b-b976-9065d7c36931",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {jugend: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('jugend');",
      "err": {},
      "isRoot": false,
      "uuid": "8b1431f5-5b86-4910-9564-e15a3a346423",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Ergebnis für Team A zurücksetzen",
      "fullTitle": "soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team A zurücksetzen",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "helpers.resetErgebnis({}, spiel, oldData, 'teamA', mock.callback);\nexpect(mock.called).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "d459e4a0-f8c0-4bb9-91c1-502e60519ed6",
      "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
      "skipped": false
    },
    {
      "title": "soll das Ergebnis für Team B zurücksetzen",
      "fullTitle": "soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team B zurücksetzen",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "1f4ec071-0ab7-4eec-ae8d-a5f924ca1398",
      "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
      "skipped": false
    },
    {
      "title": "wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
      "fullTitle": "soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "a47550d8-c0e7-45c9-b942-5dd7dcace086",
      "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
      "skipped": false
    },
    {
      "title": "wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
      "fullTitle": "soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "407cd8a4-63d4-4dce-bef2-3fcb4fe3a962",
      "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "soll einem Entity ein Team hinzufügen",
      "fullTitle": "Helpers soll einem Entity ein Team hinzufügen",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "8ece10e3-8213-4d8d-8472-2d2eb80f470e",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll ein Entity anhand eines Parameters enfernen",
      "fullTitle": "Helpers soll ein Entity anhand eines Parameters enfernen",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "6cb99475-6331-4f6f-b880-47c9c61aa918",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll einen Token validieren",
      "fullTitle": "Helpers soll einen Token validieren",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "bfea90cf-af7d-4325-a037-d3709e3b0e62",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll einen User speichern und eine Email schicken",
      "fullTitle": "Helpers soll einen User speichern und eine Email schicken",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "68e6f4b8-1987-4bd8-83e1-dba93de9f1ae",
      "parentUUID": "9fe6255e-db3b-4d3f-8251-eb3bc6d72436",
      "skipped": false
    },
    {
      "title": "soll das Ergebnis für Team B zurücksetzen",
      "fullTitle": "soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team B zurücksetzen",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "1f4ec071-0ab7-4eec-ae8d-a5f924ca1398",
      "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
      "skipped": false
    },
    {
      "title": "wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
      "fullTitle": "soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad einen Slash am Ende hat, soll er abgeschnitten werden",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "a47550d8-c0e7-45c9-b942-5dd7dcace086",
      "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
      "skipped": false
    },
    {
      "title": "wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
      "fullTitle": "soll den letzten Slash bei einem Pfad entfernen können wenn der Pfad keinen Slash am Ende hat, soll er unverändert bleiben",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "407cd8a4-63d4-4dce-bef2-3fcb4fe3a962",
      "parentUUID": "332a8a19-0b78-4209-9744-68fc61ba3209",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "soll das Query für alle Entities zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für alle Entities zurückgegeben",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('all');",
      "err": {},
      "isRoot": false,
      "uuid": "c587e816-65fa-435e-a198-085e184d2d34",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein einzelnes Entity zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein einzelnes Entity zurückgegeben",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {id: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.true;\nexpect(data.query).to.equal('id');",
      "err": {},
      "isRoot": false,
      "uuid": "cf95b877-00b9-4f05-b3e0-766e11ba77ff",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein Entity gefiltert nach Team zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Team zurückgegeben",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {team: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('team');",
      "err": {},
      "isRoot": false,
      "uuid": "0c9c9be1-6345-4c8a-b93e-f6730a8a0726",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Gruppe zurückgegeben",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {gruppe: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('gruppe');",
      "err": {},
      "isRoot": false,
      "uuid": "64fbf287-ba38-444b-b976-9065d7c36931",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
      "fullTitle": "soll die Datenbank query basierend auf Parametern laden soll das Query für ein Entity gefiltert nach Jugend zurückgegeben",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var req = {query: {jugend: '1234'}, body: {}};\nvar data = helpers.getEntityQuery(model, req);\nexpect(data.searchById).to.be.false;\nexpect(data.query).to.equal('jugend');",
      "err": {},
      "isRoot": false,
      "uuid": "8b1431f5-5b86-4910-9564-e15a3a346423",
      "parentUUID": "5a666c63-1fbb-4f1e-b853-5389c813fe29",
      "skipped": false
    },
    {
      "title": "soll das Ergebnis für Team A zurücksetzen",
      "fullTitle": "soll das Team-Ergebnis zurücksetzen können soll das Ergebnis für Team A zurücksetzen",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "helpers.resetErgebnis({}, spiel, oldData, 'teamA', mock.callback);\nexpect(mock.called).to.be.true;",
      "err": {},
      "isRoot": false,
      "uuid": "d459e4a0-f8c0-4bb9-91c1-502e60519ed6",
      "parentUUID": "9f723bbb-6c2d-41e0-ac2c-d2e767bdadc9",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}