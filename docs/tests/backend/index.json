{
  "stats": {
    "suites": 21,
    "tests": 41,
    "passes": 41,
    "pending": 0,
    "failures": 0,
    "start": "2017-06-07T14:52:38.310Z",
    "end": "2017-06-07T14:52:39.180Z",
    "duration": 870,
    "testsRegistered": 41,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Spiel - Import - Validator",
        "suites": [
          {
            "title": "soll die Felder validieren",
            "suites": [
              {
                "title": "die Nummer soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "die Nummer ist required",
                    "fullTitle": "soll die Felder validieren die Nummer soll validiert werden die Nummer ist required",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.nummer;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "040dae6b-cb81-419d-ac24-8e9bb44f6197",
                    "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                    "skipped": false
                  },
                  {
                    "title": "die Nummer muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren die Nummer soll validiert werden die Nummer muss ein Integer sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.nummer = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd95b457-098a-45b3-be54-eef51fecf668",
                    "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                    "skipped": false
                  },
                  {
                    "title": "die Nummer muss größer 0 sein",
                    "fullTitle": "soll die Felder validieren die Nummer soll validiert werden die Nummer muss größer 0 sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.nummer = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59055a1f-1dcd-4d31-89b7-746bad4b4967",
                    "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "die Nummer ist required",
                    "fullTitle": "soll die Felder validieren die Nummer soll validiert werden die Nummer ist required",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.nummer;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "040dae6b-cb81-419d-ac24-8e9bb44f6197",
                    "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                    "skipped": false
                  },
                  {
                    "title": "die Nummer muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren die Nummer soll validiert werden die Nummer muss ein Integer sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.nummer = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "fd95b457-098a-45b3-be54-eef51fecf668",
                    "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                    "skipped": false
                  },
                  {
                    "title": "die Nummer muss größer 0 sein",
                    "fullTitle": "soll die Felder validieren die Nummer soll validiert werden die Nummer muss größer 0 sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.nummer = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "59055a1f-1dcd-4d31-89b7-746bad4b4967",
                    "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 7,
                "rootEmpty": false
              },
              {
                "title": "Soll das Datum validieren",
                "suites": [],
                "tests": [
                  {
                    "title": "Das Datum ist required",
                    "fullTitle": "soll die Felder validieren Soll das Datum validieren Das Datum ist required",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.datum;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "425a723e-2e3e-4500-866d-222126df7b40",
                    "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                    "skipped": false
                  },
                  {
                    "title": "Das Datum muss im richtigen Format sein",
                    "fullTitle": "soll die Felder validieren Soll das Datum validieren Das Datum muss im richtigen Format sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.datum = '2017-01-01';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b6a01c9b-543b-4637-8a02-3a06f15da662",
                    "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                    "skipped": false
                  },
                  {
                    "title": "Das Datum muss gültig sein",
                    "fullTitle": "soll die Felder validieren Soll das Datum validieren Das Datum muss gültig sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.datum = '31.02.1990';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f0eb05e-4af8-4e09-a2af-1eff1806b6b6",
                    "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "Das Datum ist required",
                    "fullTitle": "soll die Felder validieren Soll das Datum validieren Das Datum ist required",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.datum;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "425a723e-2e3e-4500-866d-222126df7b40",
                    "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                    "skipped": false
                  },
                  {
                    "title": "Das Datum muss im richtigen Format sein",
                    "fullTitle": "soll die Felder validieren Soll das Datum validieren Das Datum muss im richtigen Format sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.datum = '2017-01-01';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b6a01c9b-543b-4637-8a02-3a06f15da662",
                    "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                    "skipped": false
                  },
                  {
                    "title": "Das Datum muss gültig sein",
                    "fullTitle": "soll die Felder validieren Soll das Datum validieren Das Datum muss gültig sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.datum = '31.02.1990';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8f0eb05e-4af8-4e09-a2af-1eff1806b6b6",
                    "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6,
                "rootEmpty": false
              },
              {
                "title": "Soll die Uhrzeit validieren",
                "suites": [],
                "tests": [
                  {
                    "title": "Die Uhrzeit ist required",
                    "fullTitle": "soll die Felder validieren Soll die Uhrzeit validieren Die Uhrzeit ist required",
                    "timedOut": false,
                    "duration": 9,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.uhrzeit;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c067c38-a1e4-479c-ae25-997d32bedf0a",
                    "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                    "skipped": false
                  },
                  {
                    "title": "Die Uhrzeit muss im richtigen Format sein",
                    "fullTitle": "soll die Felder validieren Soll die Uhrzeit validieren Die Uhrzeit muss im richtigen Format sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.uhrzeit = '07:30 AM';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f55f501e-e303-45b6-8ae4-835d44f1fbaf",
                    "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                    "skipped": false
                  },
                  {
                    "title": "Die Uhrzeit muss gültig sein",
                    "fullTitle": "soll die Felder validieren Soll die Uhrzeit validieren Die Uhrzeit muss gültig sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.uhrzeit = '48:30';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cefe3c08-5be0-4482-9119-696df2bd8f99",
                    "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "Die Uhrzeit ist required",
                    "fullTitle": "soll die Felder validieren Soll die Uhrzeit validieren Die Uhrzeit ist required",
                    "timedOut": false,
                    "duration": 9,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.uhrzeit;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6c067c38-a1e4-479c-ae25-997d32bedf0a",
                    "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                    "skipped": false
                  },
                  {
                    "title": "Die Uhrzeit muss im richtigen Format sein",
                    "fullTitle": "soll die Felder validieren Soll die Uhrzeit validieren Die Uhrzeit muss im richtigen Format sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.uhrzeit = '07:30 AM';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f55f501e-e303-45b6-8ae4-835d44f1fbaf",
                    "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                    "skipped": false
                  },
                  {
                    "title": "Die Uhrzeit muss gültig sein",
                    "fullTitle": "soll die Felder validieren Soll die Uhrzeit validieren Die Uhrzeit muss gültig sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.uhrzeit = '48:30';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "cefe3c08-5be0-4482-9119-696df2bd8f99",
                    "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 13,
                "rootEmpty": false
              },
              {
                "title": "der Platz soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "der Platz ist required",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden der Platz ist required",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.platz;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8ef178b-44f5-4208-92a6-683e4e5afcab",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  },
                  {
                    "title": "dder Platz muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden dder Platz muss ein Integer sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.platz = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50b151e8-da09-4607-baf3-e31565a680b3",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  },
                  {
                    "title": "der Platz muss größer 0 sein",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden der Platz muss größer 0 sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.platz = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ed0d46c9-3367-452f-82e3-ab97d1955edf",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  },
                  {
                    "title": "der Platz darf nicht größer als die Platzanzahl sein",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden der Platz darf nicht größer als die Platzanzahl sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.platz = 5;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be less than or equal to 3');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49c4b340-a79c-445e-9d00-9059876aa45e",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "der Platz ist required",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden der Platz ist required",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.platz;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f8ef178b-44f5-4208-92a6-683e4e5afcab",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  },
                  {
                    "title": "dder Platz muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden dder Platz muss ein Integer sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.platz = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "50b151e8-da09-4607-baf3-e31565a680b3",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  },
                  {
                    "title": "der Platz muss größer 0 sein",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden der Platz muss größer 0 sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.platz = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ed0d46c9-3367-452f-82e3-ab97d1955edf",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  },
                  {
                    "title": "der Platz darf nicht größer als die Platzanzahl sein",
                    "fullTitle": "soll die Felder validieren der Platz soll validiert werden der Platz darf nicht größer als die Platzanzahl sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.platz = 5;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be less than or equal to 3');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49c4b340-a79c-445e-9d00-9059876aa45e",
                    "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 9,
                "rootEmpty": false
              },
              {
                "title": "das Turnier soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "das Turnier ist required",
                    "fullTitle": "soll die Felder validieren das Turnier soll validiert werden das Turnier ist required",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.turnier;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9f66d7b-3f4d-49ac-9152-d108bb6b7d84",
                    "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
                    "skipped": false
                  },
                  {
                    "title": "das Turnier muss ein String sein",
                    "fullTitle": "soll die Felder validieren das Turnier soll validiert werden das Turnier muss ein String sein",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.turnier = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "85448600-4e68-42fb-aaa8-c104e523a055",
                    "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "38e322d3-b7af-4005-af99-d220da28a45e",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "das Turnier ist required",
                    "fullTitle": "soll die Felder validieren das Turnier soll validiert werden das Turnier ist required",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.turnier;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e9f66d7b-3f4d-49ac-9152-d108bb6b7d84",
                    "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
                    "skipped": false
                  },
                  {
                    "title": "das Turnier muss ein String sein",
                    "fullTitle": "soll die Felder validieren das Turnier soll validiert werden das Turnier muss ein String sein",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.turnier = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "85448600-4e68-42fb-aaa8-c104e523a055",
                    "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6,
                "rootEmpty": false
              },
              {
                "title": "die Gruppe soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "die Gruppe muss ein String sein",
                    "fullTitle": "soll die Felder validieren die Gruppe soll validiert werden die Gruppe muss ein String sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.gruppe = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"gruppe\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "588d1e43-b98f-4895-9bf4-30e4784e6900",
                    "parentUUID": "12baeef0-cbe7-44bd-ab1d-1f93832ac89f",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "12baeef0-cbe7-44bd-ab1d-1f93832ac89f",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "die Gruppe muss ein String sein",
                    "fullTitle": "soll die Felder validieren die Gruppe soll validiert werden die Gruppe muss ein String sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.gruppe = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"gruppe\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "588d1e43-b98f-4895-9bf4-30e4784e6900",
                    "parentUUID": "12baeef0-cbe7-44bd-ab1d-1f93832ac89f",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "das Spiellabel soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "das Spiellabel muss ein String sein",
                    "fullTitle": "soll die Felder validieren das Spiellabel soll validiert werden das Spiellabel muss ein String sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.spielLabel = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"spielLabel\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b1f7c0e8-1276-428f-ae43-857150e307fb",
                    "parentUUID": "7bd29edb-409f-422d-8ec1-8c3c91c5cc7a",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "7bd29edb-409f-422d-8ec1-8c3c91c5cc7a",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "das Spiellabel muss ein String sein",
                    "fullTitle": "soll die Felder validieren das Spiellabel soll validiert werden das Spiellabel muss ein String sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel.spielLabel = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"spielLabel\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b1f7c0e8-1276-428f-ae43-857150e307fb",
                    "parentUUID": "7bd29edb-409f-422d-8ec1-8c3c91c5cc7a",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2,
                "rootEmpty": false
              },
              {
                "title": "Gruppe oder Spiellabel müssen required sein",
                "suites": [],
                "tests": [
                  {
                    "title": "mindestens eins von beiden muss gegeben sein",
                    "fullTitle": "soll die Felder validieren Gruppe oder Spiellabel müssen required sein mindestens eins von beiden muss gegeben sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.gruppe;\ndelete spiel.spielLabel;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [gruppe, spielLabel]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "db92871a-7a7c-4a0d-b82f-e68ce70d3718",
                    "parentUUID": "869eed05-ca1b-4235-837e-bc58f237de12",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "869eed05-ca1b-4235-837e-bc58f237de12",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "mindestens eins von beiden muss gegeben sein",
                    "fullTitle": "soll die Felder validieren Gruppe oder Spiellabel müssen required sein mindestens eins von beiden muss gegeben sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel.gruppe;\ndelete spiel.spielLabel;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [gruppe, spielLabel]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "db92871a-7a7c-4a0d-b82f-e68ce70d3718",
                    "parentUUID": "869eed05-ca1b-4235-837e-bc58f237de12",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2,
                "rootEmpty": false
              },
              {
                "title": "das TeamA soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "das Team muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamA soll validiert werden das Team muss ein String sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a4aaa54-ce94-470d-9c09-6d6c0c557431",
                    "parentUUID": "9c2fa5cf-0946-4b10-9846-5763d7833df6",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "9c2fa5cf-0946-4b10-9846-5763d7833df6",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "das Team muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamA soll validiert werden das Team muss ein String sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5a4aaa54-ce94-470d-9c09-6d6c0c557431",
                    "parentUUID": "9c2fa5cf-0946-4b10-9846-5763d7833df6",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "das TeamALabel soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "das TeamLabel muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamALabel soll validiert werden das TeamLabel muss ein String sein",
                    "timedOut": false,
                    "duration": 8,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e62871d-d2aa-471e-b552-4ff2429842a5",
                    "parentUUID": "1459df3f-a3a5-4691-ab65-9bbf03845634",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "1459df3f-a3a5-4691-ab65-9bbf03845634",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "das TeamLabel muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamALabel soll validiert werden das TeamLabel muss ein String sein",
                    "timedOut": false,
                    "duration": 8,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5e62871d-d2aa-471e-b552-4ff2429842a5",
                    "parentUUID": "1459df3f-a3a5-4691-ab65-9bbf03845634",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 8,
                "rootEmpty": false
              },
              {
                "title": "das TeamA und das TeamLabel sollen required sein",
                "suites": [],
                "tests": [
                  {
                    "title": "mindestens eines von beiden muss gegeben sein",
                    "fullTitle": "soll die Felder validieren das TeamA und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "55f1c77e-db98-4ad3-8a04-9dec8d823850",
                    "parentUUID": "1d657f3a-9fb2-4d6d-8dd4-527f6b98de12",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "1d657f3a-9fb2-4d6d-8dd4-527f6b98de12",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "mindestens eines von beiden muss gegeben sein",
                    "fullTitle": "soll die Felder validieren das TeamA und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "55f1c77e-db98-4ad3-8a04-9dec8d823850",
                    "parentUUID": "1d657f3a-9fb2-4d6d-8dd4-527f6b98de12",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3,
                "rootEmpty": false
              },
              {
                "title": "das TeamB soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "das Team muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamB soll validiert werden das Team muss ein String sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "60dc0f2f-86a9-46b1-9295-4b3865ac1c33",
                    "parentUUID": "c42255f6-737c-47c3-a1a3-94fe6e90da7a",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "c42255f6-737c-47c3-a1a3-94fe6e90da7a",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "das Team muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamB soll validiert werden das Team muss ein String sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "60dc0f2f-86a9-46b1-9295-4b3865ac1c33",
                    "parentUUID": "c42255f6-737c-47c3-a1a3-94fe6e90da7a",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2,
                "rootEmpty": false
              },
              {
                "title": "das TeamBLabel soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "das TeamLabel muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamBLabel soll validiert werden das TeamLabel muss ein String sein",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "343ca2c7-d2c8-44b4-9424-5788d9a6af9c",
                    "parentUUID": "14c05eb6-1ac7-441a-b244-a9b2ca919b2b",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "14c05eb6-1ac7-441a-b244-a9b2ca919b2b",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "das TeamLabel muss ein String sein",
                    "fullTitle": "soll die Felder validieren das TeamBLabel soll validiert werden das TeamLabel muss ein String sein",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "343ca2c7-d2c8-44b4-9424-5788d9a6af9c",
                    "parentUUID": "14c05eb6-1ac7-441a-b244-a9b2ca919b2b",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 5,
                "rootEmpty": false
              },
              {
                "title": "das TeamB und das TeamLabel sollen required sein",
                "suites": [],
                "tests": [
                  {
                    "title": "mindestens eines von beiden muss gegeben sein",
                    "fullTitle": "soll die Felder validieren das TeamB und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "44d2d1d1-6350-4d73-8f0f-249a9a3cd4be",
                    "parentUUID": "43d9131b-83c8-4113-b221-d93325cae4c6",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "43d9131b-83c8-4113-b221-d93325cae4c6",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "mindestens eines von beiden muss gegeben sein",
                    "fullTitle": "soll die Felder validieren das TeamB und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "44d2d1d1-6350-4d73-8f0f-249a9a3cd4be",
                    "parentUUID": "43d9131b-83c8-4113-b221-d93325cae4c6",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1,
                "rootEmpty": false
              },
              {
                "title": "toreA soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "toreA ist required",
                    "fullTitle": "soll die Felder validieren toreA soll validiert werden toreA ist required",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8846de7a-4750-432d-9326-92a88ac19938",
                    "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
                    "skipped": false
                  },
                  {
                    "title": "toreA muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren toreA soll validiert werden toreA muss ein Integer sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b8d4324-456e-48dc-96fe-cea3b3cf924f",
                    "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
                    "skipped": false
                  },
                  {
                    "title": "toreA muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren toreA soll validiert werden toreA muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f41a2b4f-220d-4e28-b07f-d8ae064a7d51",
                    "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "93e9bdcf-0252-465e-991d-44cb4028bece",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "toreA ist required",
                    "fullTitle": "soll die Felder validieren toreA soll validiert werden toreA ist required",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "8846de7a-4750-432d-9326-92a88ac19938",
                    "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
                    "skipped": false
                  },
                  {
                    "title": "toreA muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren toreA soll validiert werden toreA muss ein Integer sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6b8d4324-456e-48dc-96fe-cea3b3cf924f",
                    "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
                    "skipped": false
                  },
                  {
                    "title": "toreA muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren toreA soll validiert werden toreA muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f41a2b4f-220d-4e28-b07f-d8ae064a7d51",
                    "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 5,
                "rootEmpty": false
              },
              {
                "title": "toreB soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "toreB ist required",
                    "fullTitle": "soll die Felder validieren toreB soll validiert werden toreB ist required",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b568cfea-18c0-4fb8-bdd5-5ccc6e308ac7",
                    "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                    "skipped": false
                  },
                  {
                    "title": "toreB muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren toreB soll validiert werden toreB muss ein Integer sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f4a25ffb-d68a-4efc-b75d-251c7480101f",
                    "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                    "skipped": false
                  },
                  {
                    "title": "toreB muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren toreB soll validiert werden toreB muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9350efe7-3325-41c8-9c64-c021c4cf71de",
                    "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "toreB ist required",
                    "fullTitle": "soll die Felder validieren toreB soll validiert werden toreB ist required",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "b568cfea-18c0-4fb8-bdd5-5ccc6e308ac7",
                    "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                    "skipped": false
                  },
                  {
                    "title": "toreB muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren toreB soll validiert werden toreB muss ein Integer sein",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "f4a25ffb-d68a-4efc-b75d-251c7480101f",
                    "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                    "skipped": false
                  },
                  {
                    "title": "toreB muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren toreB soll validiert werden toreB muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9350efe7-3325-41c8-9c64-c021c4cf71de",
                    "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4,
                "rootEmpty": false
              },
              {
                "title": "punkteA soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "punkteA ist required",
                    "fullTitle": "soll die Felder validieren punkteA soll validiert werden punkteA ist required",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5573a534-9985-4dc5-a4c4-1b2013819214",
                    "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                    "skipped": false
                  },
                  {
                    "title": "punkteA muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren punkteA soll validiert werden punkteA muss ein Integer sein",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dcb2abfb-b44a-4113-85c8-64f1908cfe4b",
                    "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                    "skipped": false
                  },
                  {
                    "title": "punkteA muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren punkteA soll validiert werden punkteA muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6fe6ee70-72b5-45af-a7eb-55f5bbf002b2",
                    "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "punkteA ist required",
                    "fullTitle": "soll die Felder validieren punkteA soll validiert werden punkteA ist required",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "5573a534-9985-4dc5-a4c4-1b2013819214",
                    "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                    "skipped": false
                  },
                  {
                    "title": "punkteA muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren punkteA soll validiert werden punkteA muss ein Integer sein",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "dcb2abfb-b44a-4113-85c8-64f1908cfe4b",
                    "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                    "skipped": false
                  },
                  {
                    "title": "punkteA muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren punkteA soll validiert werden punkteA muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6fe6ee70-72b5-45af-a7eb-55f5bbf002b2",
                    "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 13,
                "rootEmpty": false
              },
              {
                "title": "punkteB soll validiert werden",
                "suites": [],
                "tests": [
                  {
                    "title": "punkteB ist required",
                    "fullTitle": "soll die Felder validieren punkteB soll validiert werden punkteB ist required",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a674d05-ddd4-499d-aa6b-1b82bbf0a49e",
                    "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
                    "skipped": false
                  },
                  {
                    "title": "punkteB muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren punkteB soll validiert werden punkteB muss ein Integer sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c6c8bb1-74c5-486d-8003-8130a134a7d0",
                    "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
                    "skipped": false
                  },
                  {
                    "title": "punkteB muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren punkteB soll validiert werden punkteB muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a7d58dcc-ea45-47db-887b-6333b677e679",
                    "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 120000,
                "file": "/test/backend/spielImporter/validator.spec.js",
                "uuid": "a1ccd794-4416-4890-afaa-1023f199d666",
                "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
                "passes": [
                  {
                    "title": "punkteB ist required",
                    "fullTitle": "soll die Felder validieren punkteB soll validiert werden punkteB ist required",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "9a674d05-ddd4-499d-aa6b-1b82bbf0a49e",
                    "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
                    "skipped": false
                  },
                  {
                    "title": "punkteB muss ein Integer sein",
                    "fullTitle": "soll die Felder validieren punkteB soll validiert werden punkteB muss ein Integer sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4c6c8bb1-74c5-486d-8003-8130a134a7d0",
                    "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
                    "skipped": false
                  },
                  {
                    "title": "punkteB muss größer gleich 0 sein",
                    "fullTitle": "soll die Felder validieren punkteB soll validiert werden punkteB muss größer gleich 0 sein",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
                    "err": {},
                    "isRoot": false,
                    "uuid": "a7d58dcc-ea45-47db-887b-6333b677e679",
                    "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4,
                "rootEmpty": false
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 120000,
            "file": "/test/backend/spielImporter/validator.spec.js",
            "uuid": "685b7657-62c5-498c-9f84-1249514484e7",
            "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0,
            "rootEmpty": false
          },
          {
            "title": "die Entities sollen auf Existenz geprüft werden",
            "suites": [],
            "tests": [
              {
                "title": "wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "0ebd7972-533e-48cc-8478-7a825a3d5a0e",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              },
              {
                "title": "wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "74707bc1-f853-4625-8f8a-9f493bcbf45c",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              },
              {
                "title": "wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2ea1bbe5-5667-4803-8a34-81eada1845d7",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              },
              {
                "title": "wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "469082d5-9dff-4781-a3e0-bf05041f5274",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 120000,
            "file": "/test/backend/spielImporter/validator.spec.js",
            "uuid": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
            "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
            "passes": [
              {
                "title": "wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "0ebd7972-533e-48cc-8478-7a825a3d5a0e",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              },
              {
                "title": "wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "74707bc1-f853-4625-8f8a-9f493bcbf45c",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              },
              {
                "title": "wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "2ea1bbe5-5667-4803-8a34-81eada1845d7",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              },
              {
                "title": "wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
                "fullTitle": "Spiel - Import - Validator die Entities sollen auf Existenz geprüft werden wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
                "timedOut": false,
                "duration": 23,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
                "err": {},
                "isRoot": false,
                "uuid": "469082d5-9dff-4781-a3e0-bf05041f5274",
                "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 55,
            "rootEmpty": false
          }
        ],
        "tests": [
          {
            "title": "soll einen Fehler bei einem undefined Spiel liefern",
            "fullTitle": "Spiel - Import - Validator soll einen Fehler bei einem undefined Spiel liefern",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "validate(undefined, index, function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Spiel is empty');\n    expect(res).to.be.false;\n    return done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "def03ed2-b2ef-4490-ac42-386e3965b6e4",
            "parentUUID": "e80a8750-aa87-430a-b1a9-40b3b8427251",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 120000,
        "file": "/test/backend/spielImporter/validator.spec.js",
        "uuid": "e80a8750-aa87-430a-b1a9-40b3b8427251",
        "fullFile": "/Users/Berni/DEV/Projects/spielplanismaning/test/backend/spielImporter/validator.spec.js",
        "passes": [
          {
            "title": "soll einen Fehler bei einem undefined Spiel liefern",
            "fullTitle": "Spiel - Import - Validator soll einen Fehler bei einem undefined Spiel liefern",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "validate(undefined, index, function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Spiel is empty');\n    expect(res).to.be.false;\n    return done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "def03ed2-b2ef-4490-ac42-386e3965b6e4",
            "parentUUID": "e80a8750-aa87-430a-b1a9-40b3b8427251",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": true,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 120000,
    "uuid": "075cb980-62de-4634-a9d3-016042698e79",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "soll einen Fehler bei einem undefined Spiel liefern",
      "fullTitle": "Spiel - Import - Validator soll einen Fehler bei einem undefined Spiel liefern",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "validate(undefined, index, function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Spiel is empty');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "def03ed2-b2ef-4490-ac42-386e3965b6e4",
      "parentUUID": "e80a8750-aa87-430a-b1a9-40b3b8427251",
      "skipped": false
    },
    {
      "title": "die Nummer ist required",
      "fullTitle": "die Nummer soll validiert werden die Nummer ist required",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.nummer;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "040dae6b-cb81-419d-ac24-8e9bb44f6197",
      "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
      "skipped": false
    },
    {
      "title": "die Nummer muss ein Integer sein",
      "fullTitle": "die Nummer soll validiert werden die Nummer muss ein Integer sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.nummer = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "fd95b457-098a-45b3-be54-eef51fecf668",
      "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
      "skipped": false
    },
    {
      "title": "die Nummer muss größer 0 sein",
      "fullTitle": "die Nummer soll validiert werden die Nummer muss größer 0 sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.nummer = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "59055a1f-1dcd-4d31-89b7-746bad4b4967",
      "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
      "skipped": false
    },
    {
      "title": "Das Datum ist required",
      "fullTitle": "Soll das Datum validieren Das Datum ist required",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.datum;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "425a723e-2e3e-4500-866d-222126df7b40",
      "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
      "skipped": false
    },
    {
      "title": "Das Datum muss im richtigen Format sein",
      "fullTitle": "Soll das Datum validieren Das Datum muss im richtigen Format sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.datum = '2017-01-01';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b6a01c9b-543b-4637-8a02-3a06f15da662",
      "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
      "skipped": false
    },
    {
      "title": "Das Datum muss gültig sein",
      "fullTitle": "Soll das Datum validieren Das Datum muss gültig sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.datum = '31.02.1990';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8f0eb05e-4af8-4e09-a2af-1eff1806b6b6",
      "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
      "skipped": false
    },
    {
      "title": "Die Uhrzeit ist required",
      "fullTitle": "Soll die Uhrzeit validieren Die Uhrzeit ist required",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.uhrzeit;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6c067c38-a1e4-479c-ae25-997d32bedf0a",
      "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
      "skipped": false
    },
    {
      "title": "Die Uhrzeit muss im richtigen Format sein",
      "fullTitle": "Soll die Uhrzeit validieren Die Uhrzeit muss im richtigen Format sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.uhrzeit = '07:30 AM';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f55f501e-e303-45b6-8ae4-835d44f1fbaf",
      "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
      "skipped": false
    },
    {
      "title": "Die Uhrzeit muss gültig sein",
      "fullTitle": "Soll die Uhrzeit validieren Die Uhrzeit muss gültig sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.uhrzeit = '48:30';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "cefe3c08-5be0-4482-9119-696df2bd8f99",
      "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
      "skipped": false
    },
    {
      "title": "der Platz ist required",
      "fullTitle": "der Platz soll validiert werden der Platz ist required",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.platz;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f8ef178b-44f5-4208-92a6-683e4e5afcab",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "dder Platz muss ein Integer sein",
      "fullTitle": "der Platz soll validiert werden dder Platz muss ein Integer sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.platz = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "50b151e8-da09-4607-baf3-e31565a680b3",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "der Platz muss größer 0 sein",
      "fullTitle": "der Platz soll validiert werden der Platz muss größer 0 sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.platz = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "ed0d46c9-3367-452f-82e3-ab97d1955edf",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "der Platz darf nicht größer als die Platzanzahl sein",
      "fullTitle": "der Platz soll validiert werden der Platz darf nicht größer als die Platzanzahl sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.platz = 5;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be less than or equal to 3');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "49c4b340-a79c-445e-9d00-9059876aa45e",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "das Turnier ist required",
      "fullTitle": "das Turnier soll validiert werden das Turnier ist required",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.turnier;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "e9f66d7b-3f4d-49ac-9152-d108bb6b7d84",
      "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
      "skipped": false
    },
    {
      "title": "das Turnier muss ein String sein",
      "fullTitle": "das Turnier soll validiert werden das Turnier muss ein String sein",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.turnier = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "85448600-4e68-42fb-aaa8-c104e523a055",
      "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
      "skipped": false
    },
    {
      "title": "die Gruppe muss ein String sein",
      "fullTitle": "die Gruppe soll validiert werden die Gruppe muss ein String sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.gruppe = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"gruppe\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "588d1e43-b98f-4895-9bf4-30e4784e6900",
      "parentUUID": "12baeef0-cbe7-44bd-ab1d-1f93832ac89f",
      "skipped": false
    },
    {
      "title": "das Spiellabel muss ein String sein",
      "fullTitle": "das Spiellabel soll validiert werden das Spiellabel muss ein String sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.spielLabel = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"spielLabel\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b1f7c0e8-1276-428f-ae43-857150e307fb",
      "parentUUID": "7bd29edb-409f-422d-8ec1-8c3c91c5cc7a",
      "skipped": false
    },
    {
      "title": "mindestens eins von beiden muss gegeben sein",
      "fullTitle": "Gruppe oder Spiellabel müssen required sein mindestens eins von beiden muss gegeben sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.gruppe;\ndelete spiel.spielLabel;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [gruppe, spielLabel]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "db92871a-7a7c-4a0d-b82f-e68ce70d3718",
      "parentUUID": "869eed05-ca1b-4235-837e-bc58f237de12",
      "skipped": false
    },
    {
      "title": "das Team muss ein String sein",
      "fullTitle": "das TeamA soll validiert werden das Team muss ein String sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5a4aaa54-ce94-470d-9c09-6d6c0c557431",
      "parentUUID": "9c2fa5cf-0946-4b10-9846-5763d7833df6",
      "skipped": false
    },
    {
      "title": "das TeamLabel muss ein String sein",
      "fullTitle": "das TeamALabel soll validiert werden das TeamLabel muss ein String sein",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5e62871d-d2aa-471e-b552-4ff2429842a5",
      "parentUUID": "1459df3f-a3a5-4691-ab65-9bbf03845634",
      "skipped": false
    },
    {
      "title": "mindestens eines von beiden muss gegeben sein",
      "fullTitle": "das TeamA und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "55f1c77e-db98-4ad3-8a04-9dec8d823850",
      "parentUUID": "1d657f3a-9fb2-4d6d-8dd4-527f6b98de12",
      "skipped": false
    },
    {
      "title": "das Team muss ein String sein",
      "fullTitle": "das TeamB soll validiert werden das Team muss ein String sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "60dc0f2f-86a9-46b1-9295-4b3865ac1c33",
      "parentUUID": "c42255f6-737c-47c3-a1a3-94fe6e90da7a",
      "skipped": false
    },
    {
      "title": "das TeamLabel muss ein String sein",
      "fullTitle": "das TeamBLabel soll validiert werden das TeamLabel muss ein String sein",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "343ca2c7-d2c8-44b4-9424-5788d9a6af9c",
      "parentUUID": "14c05eb6-1ac7-441a-b244-a9b2ca919b2b",
      "skipped": false
    },
    {
      "title": "mindestens eines von beiden muss gegeben sein",
      "fullTitle": "das TeamB und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "44d2d1d1-6350-4d73-8f0f-249a9a3cd4be",
      "parentUUID": "43d9131b-83c8-4113-b221-d93325cae4c6",
      "skipped": false
    },
    {
      "title": "toreA ist required",
      "fullTitle": "toreA soll validiert werden toreA ist required",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8846de7a-4750-432d-9326-92a88ac19938",
      "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
      "skipped": false
    },
    {
      "title": "toreA muss ein Integer sein",
      "fullTitle": "toreA soll validiert werden toreA muss ein Integer sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6b8d4324-456e-48dc-96fe-cea3b3cf924f",
      "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
      "skipped": false
    },
    {
      "title": "toreA muss größer gleich 0 sein",
      "fullTitle": "toreA soll validiert werden toreA muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f41a2b4f-220d-4e28-b07f-d8ae064a7d51",
      "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
      "skipped": false
    },
    {
      "title": "toreB ist required",
      "fullTitle": "toreB soll validiert werden toreB ist required",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b568cfea-18c0-4fb8-bdd5-5ccc6e308ac7",
      "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
      "skipped": false
    },
    {
      "title": "toreB muss ein Integer sein",
      "fullTitle": "toreB soll validiert werden toreB muss ein Integer sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f4a25ffb-d68a-4efc-b75d-251c7480101f",
      "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
      "skipped": false
    },
    {
      "title": "toreB muss größer gleich 0 sein",
      "fullTitle": "toreB soll validiert werden toreB muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9350efe7-3325-41c8-9c64-c021c4cf71de",
      "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
      "skipped": false
    },
    {
      "title": "punkteA ist required",
      "fullTitle": "punkteA soll validiert werden punkteA ist required",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5573a534-9985-4dc5-a4c4-1b2013819214",
      "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
      "skipped": false
    },
    {
      "title": "punkteA muss ein Integer sein",
      "fullTitle": "punkteA soll validiert werden punkteA muss ein Integer sein",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "dcb2abfb-b44a-4113-85c8-64f1908cfe4b",
      "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
      "skipped": false
    },
    {
      "title": "punkteA muss größer gleich 0 sein",
      "fullTitle": "punkteA soll validiert werden punkteA muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6fe6ee70-72b5-45af-a7eb-55f5bbf002b2",
      "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
      "skipped": false
    },
    {
      "title": "punkteB ist required",
      "fullTitle": "punkteB soll validiert werden punkteB ist required",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9a674d05-ddd4-499d-aa6b-1b82bbf0a49e",
      "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
      "skipped": false
    },
    {
      "title": "punkteB muss ein Integer sein",
      "fullTitle": "punkteB soll validiert werden punkteB muss ein Integer sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4c6c8bb1-74c5-486d-8003-8130a134a7d0",
      "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
      "skipped": false
    },
    {
      "title": "punkteB muss größer gleich 0 sein",
      "fullTitle": "punkteB soll validiert werden punkteB muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a7d58dcc-ea45-47db-887b-6333b677e679",
      "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
      "skipped": false
    },
    {
      "title": "wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "0ebd7972-533e-48cc-8478-7a825a3d5a0e",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    },
    {
      "title": "wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "74707bc1-f853-4625-8f8a-9f493bcbf45c",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    },
    {
      "title": "wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "2ea1bbe5-5667-4803-8a34-81eada1845d7",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    },
    {
      "title": "wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "469082d5-9dff-4781-a3e0-bf05041f5274",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "soll einen Fehler bei einem undefined Spiel liefern",
      "fullTitle": "Spiel - Import - Validator soll einen Fehler bei einem undefined Spiel liefern",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "validate(undefined, index, function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Spiel is empty');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "def03ed2-b2ef-4490-ac42-386e3965b6e4",
      "parentUUID": "e80a8750-aa87-430a-b1a9-40b3b8427251",
      "skipped": false
    },
    {
      "title": "die Nummer ist required",
      "fullTitle": "die Nummer soll validiert werden die Nummer ist required",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.nummer;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "040dae6b-cb81-419d-ac24-8e9bb44f6197",
      "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
      "skipped": false
    },
    {
      "title": "die Nummer muss ein Integer sein",
      "fullTitle": "die Nummer soll validiert werden die Nummer muss ein Integer sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.nummer = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "fd95b457-098a-45b3-be54-eef51fecf668",
      "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
      "skipped": false
    },
    {
      "title": "die Nummer muss größer 0 sein",
      "fullTitle": "die Nummer soll validiert werden die Nummer muss größer 0 sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.nummer = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"nummer\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "59055a1f-1dcd-4d31-89b7-746bad4b4967",
      "parentUUID": "51122f40-4d7a-4abf-81a6-32adb7de43b6",
      "skipped": false
    },
    {
      "title": "Das Datum ist required",
      "fullTitle": "Soll das Datum validieren Das Datum ist required",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.datum;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "425a723e-2e3e-4500-866d-222126df7b40",
      "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
      "skipped": false
    },
    {
      "title": "Das Datum muss im richtigen Format sein",
      "fullTitle": "Soll das Datum validieren Das Datum muss im richtigen Format sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.datum = '2017-01-01';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b6a01c9b-543b-4637-8a02-3a06f15da662",
      "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
      "skipped": false
    },
    {
      "title": "Das Datum muss gültig sein",
      "fullTitle": "Soll das Datum validieren Das Datum muss gültig sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.datum = '31.02.1990';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"datum\" must be a string with one of the following formats [DD.MM.YYYY]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8f0eb05e-4af8-4e09-a2af-1eff1806b6b6",
      "parentUUID": "d946dd1b-51dc-409a-93bd-b39fdacf6fa9",
      "skipped": false
    },
    {
      "title": "Die Uhrzeit ist required",
      "fullTitle": "Soll die Uhrzeit validieren Die Uhrzeit ist required",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.uhrzeit;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6c067c38-a1e4-479c-ae25-997d32bedf0a",
      "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
      "skipped": false
    },
    {
      "title": "Die Uhrzeit muss im richtigen Format sein",
      "fullTitle": "Soll die Uhrzeit validieren Die Uhrzeit muss im richtigen Format sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.uhrzeit = '07:30 AM';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f55f501e-e303-45b6-8ae4-835d44f1fbaf",
      "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
      "skipped": false
    },
    {
      "title": "Die Uhrzeit muss gültig sein",
      "fullTitle": "Soll die Uhrzeit validieren Die Uhrzeit muss gültig sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.uhrzeit = '48:30';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"uhrzeit\" must be a string with one of the following formats [HH:mm]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "cefe3c08-5be0-4482-9119-696df2bd8f99",
      "parentUUID": "e1c60c8b-d2d6-4780-8548-792561949fc0",
      "skipped": false
    },
    {
      "title": "der Platz ist required",
      "fullTitle": "der Platz soll validiert werden der Platz ist required",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.platz;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f8ef178b-44f5-4208-92a6-683e4e5afcab",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "dder Platz muss ein Integer sein",
      "fullTitle": "der Platz soll validiert werden dder Platz muss ein Integer sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.platz = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "50b151e8-da09-4607-baf3-e31565a680b3",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "der Platz muss größer 0 sein",
      "fullTitle": "der Platz soll validiert werden der Platz muss größer 0 sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.platz = 0;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be larger than or equal to 1');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "ed0d46c9-3367-452f-82e3-ab97d1955edf",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "der Platz darf nicht größer als die Platzanzahl sein",
      "fullTitle": "der Platz soll validiert werden der Platz darf nicht größer als die Platzanzahl sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.platz = 5;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"platz\" must be less than or equal to 3');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "49c4b340-a79c-445e-9d00-9059876aa45e",
      "parentUUID": "cb9c7623-9a08-42c9-92ba-221a2e26539c",
      "skipped": false
    },
    {
      "title": "das Turnier ist required",
      "fullTitle": "das Turnier soll validiert werden das Turnier ist required",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.turnier;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "e9f66d7b-3f4d-49ac-9152-d108bb6b7d84",
      "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
      "skipped": false
    },
    {
      "title": "das Turnier muss ein String sein",
      "fullTitle": "das Turnier soll validiert werden das Turnier muss ein String sein",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.turnier = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"turnier\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "85448600-4e68-42fb-aaa8-c104e523a055",
      "parentUUID": "38e322d3-b7af-4005-af99-d220da28a45e",
      "skipped": false
    },
    {
      "title": "die Gruppe muss ein String sein",
      "fullTitle": "die Gruppe soll validiert werden die Gruppe muss ein String sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.gruppe = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"gruppe\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "588d1e43-b98f-4895-9bf4-30e4784e6900",
      "parentUUID": "12baeef0-cbe7-44bd-ab1d-1f93832ac89f",
      "skipped": false
    },
    {
      "title": "das Spiellabel muss ein String sein",
      "fullTitle": "das Spiellabel soll validiert werden das Spiellabel muss ein String sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel.spielLabel = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"spielLabel\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b1f7c0e8-1276-428f-ae43-857150e307fb",
      "parentUUID": "7bd29edb-409f-422d-8ec1-8c3c91c5cc7a",
      "skipped": false
    },
    {
      "title": "mindestens eins von beiden muss gegeben sein",
      "fullTitle": "Gruppe oder Spiellabel müssen required sein mindestens eins von beiden muss gegeben sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel.gruppe;\ndelete spiel.spielLabel;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [gruppe, spielLabel]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "db92871a-7a7c-4a0d-b82f-e68ce70d3718",
      "parentUUID": "869eed05-ca1b-4235-837e-bc58f237de12",
      "skipped": false
    },
    {
      "title": "das Team muss ein String sein",
      "fullTitle": "das TeamA soll validiert werden das Team muss ein String sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5a4aaa54-ce94-470d-9c09-6d6c0c557431",
      "parentUUID": "9c2fa5cf-0946-4b10-9846-5763d7833df6",
      "skipped": false
    },
    {
      "title": "das TeamLabel muss ein String sein",
      "fullTitle": "das TeamALabel soll validiert werden das TeamLabel muss ein String sein",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5e62871d-d2aa-471e-b552-4ff2429842a5",
      "parentUUID": "1459df3f-a3a5-4691-ab65-9bbf03845634",
      "skipped": false
    },
    {
      "title": "mindestens eines von beiden muss gegeben sein",
      "fullTitle": "das TeamA und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "55f1c77e-db98-4ad3-8a04-9dec8d823850",
      "parentUUID": "1d657f3a-9fb2-4d6d-8dd4-527f6b98de12",
      "skipped": false
    },
    {
      "title": "das Team muss ein String sein",
      "fullTitle": "das TeamB soll validiert werden das Team muss ein String sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + '\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "60dc0f2f-86a9-46b1-9295-4b3865ac1c33",
      "parentUUID": "c42255f6-737c-47c3-a1a3-94fe6e90da7a",
      "skipped": false
    },
    {
      "title": "das TeamLabel muss ein String sein",
      "fullTitle": "das TeamBLabel soll validiert werden das TeamLabel muss ein String sein",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel['team' + letter + 'Label'] = 42;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"team' + letter + 'Label\" must be a string');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "343ca2c7-d2c8-44b4-9424-5788d9a6af9c",
      "parentUUID": "14c05eb6-1ac7-441a-b244-a9b2ca919b2b",
      "skipped": false
    },
    {
      "title": "mindestens eines von beiden muss gegeben sein",
      "fullTitle": "das TeamB und das TeamLabel sollen required sein mindestens eines von beiden muss gegeben sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel['team' + letter + 'Label'];\ndelete spiel['team' + letter];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"value\" must contain at least one of [team' + letter + ', team' + letter + 'Label]');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "44d2d1d1-6350-4d73-8f0f-249a9a3cd4be",
      "parentUUID": "43d9131b-83c8-4113-b221-d93325cae4c6",
      "skipped": false
    },
    {
      "title": "toreA ist required",
      "fullTitle": "toreA soll validiert werden toreA ist required",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "8846de7a-4750-432d-9326-92a88ac19938",
      "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
      "skipped": false
    },
    {
      "title": "toreA muss ein Integer sein",
      "fullTitle": "toreA soll validiert werden toreA muss ein Integer sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6b8d4324-456e-48dc-96fe-cea3b3cf924f",
      "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
      "skipped": false
    },
    {
      "title": "toreA muss größer gleich 0 sein",
      "fullTitle": "toreA soll validiert werden toreA muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f41a2b4f-220d-4e28-b07f-d8ae064a7d51",
      "parentUUID": "93e9bdcf-0252-465e-991d-44cb4028bece",
      "skipped": false
    },
    {
      "title": "toreB ist required",
      "fullTitle": "toreB soll validiert werden toreB ist required",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "b568cfea-18c0-4fb8-bdd5-5ccc6e308ac7",
      "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
      "skipped": false
    },
    {
      "title": "toreB muss ein Integer sein",
      "fullTitle": "toreB soll validiert werden toreB muss ein Integer sein",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f4a25ffb-d68a-4efc-b75d-251c7480101f",
      "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
      "skipped": false
    },
    {
      "title": "toreB muss größer gleich 0 sein",
      "fullTitle": "toreB soll validiert werden toreB muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9350efe7-3325-41c8-9c64-c021c4cf71de",
      "parentUUID": "145c7ba6-d9da-4212-a9a1-2e75a506de09",
      "skipped": false
    },
    {
      "title": "punkteA ist required",
      "fullTitle": "punkteA soll validiert werden punkteA ist required",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5573a534-9985-4dc5-a4c4-1b2013819214",
      "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
      "skipped": false
    },
    {
      "title": "punkteA muss ein Integer sein",
      "fullTitle": "punkteA soll validiert werden punkteA muss ein Integer sein",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "dcb2abfb-b44a-4113-85c8-64f1908cfe4b",
      "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
      "skipped": false
    },
    {
      "title": "punkteA muss größer gleich 0 sein",
      "fullTitle": "punkteA soll validiert werden punkteA muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6fe6ee70-72b5-45af-a7eb-55f5bbf002b2",
      "parentUUID": "ac7fc559-045b-4f4d-9f87-8456dc668764",
      "skipped": false
    },
    {
      "title": "punkteB ist required",
      "fullTitle": "punkteB soll validiert werden punkteB ist required",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "delete spiel[key];\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" is required');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9a674d05-ddd4-499d-aa6b-1b82bbf0a49e",
      "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
      "skipped": false
    },
    {
      "title": "punkteB muss ein Integer sein",
      "fullTitle": "punkteB soll validiert werden punkteB muss ein Integer sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'foo';\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be a number');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4c6c8bb1-74c5-486d-8003-8130a134a7d0",
      "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
      "skipped": false
    },
    {
      "title": "punkteB muss größer gleich 0 sein",
      "fullTitle": "punkteB soll validiert werden punkteB muss größer gleich 0 sein",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = -1;\ncheck(function (err, res) {\n    expect(err).to.be.defined;\n    expect(err).to.equal(validationErrorPrefix + 'Fields invalid: \"' + key + '\" must be larger than or equal to 0');\n    expect(res).to.be.false;\n    return done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a7d58dcc-ea45-47db-887b-6333b677e679",
      "parentUUID": "a1ccd794-4416-4890-afaa-1023f199d666",
      "skipped": false
    },
    {
      "title": "wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das turnier nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "0ebd7972-533e-48cc-8478-7a825a3d5a0e",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    },
    {
      "title": "wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das gruppe nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "74707bc1-f853-4625-8f8a-9f493bcbf45c",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    },
    {
      "title": "wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das teamA nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "2ea1bbe5-5667-4803-8a34-81eada1845d7",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    },
    {
      "title": "wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
      "fullTitle": "die Entities sollen auf Existenz geprüft werden wenn das teamB nicht gefunden wird, soll ein Fehler gemeldet werden",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "spiel[key] = 'invalid-slug';\nreturn clsSession.run(function () {\n    clsSession.set('beachEventID', beachEventID);\n    check(function (err, res) {\n        expect(err).to.be.defined;\n        expect(err).to.equal(validationErrorPrefix + 'Entity ' + key + ' with slug invalid-slug not found');\n        expect(res).to.be.false;\n        return done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "469082d5-9dff-4781-a3e0-bf05041f5274",
      "parentUUID": "6daeeabb-1b76-4429-b914-af8d153d8cbe",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}